name: Build, Deploy, and Secure Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/wisecow:${{ github.sha }}

      - name: Set up SSH tunnel
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -f -N -L 16443:localhost:16443 ubuntu@65.1.112.89

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Set up Kubeconfig
        run: |
         mkdir -p $HOME/.kube
         echo "Directory created at $HOME/.kube"
         echo "Base64 data received:"
         echo "${{ secrets.KUBE_CONFIG_DATA }}" | head -n 10
         echo "Decoding base64 data..."
         echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config
         echo "Kubeconfig written to $HOME/.kube/config"
         chmod 600 $HOME/.kube/config
         ls -la $HOME/.kube
        
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/deployment.yml --v=8
          kubectl apply -f k8s/service.yml
          kubectl apply -f k8s/ingress.yml
          kubectl apply -f k8s/cluster-issuer.yml
          kubectl apply -f k8s/certificate.yml

      - name: Wait for TLS certificate to be issued
        run: |
          echo "Waiting for TLS certificate to be issued..."
          while true; do
            STATUS=$(kubectl get certificate wisecow-tls -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}')
            if [ "$STATUS" == "True" ]; then
              echo "TLS certificate issued successfully."
              break
            fi
            echo "TLS certificate not yet issued. Checking again in 30 seconds..."
            sleep 30
          done

